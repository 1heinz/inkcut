import traceback
from enaml.workbench.api import Extension, PluginManifest
from enaml.workbench.ui.api import ActionItem, MenuItem, ItemGroup
from enaml.workbench.core.command import Command
from enaml.workbench.ui.autostart import Autostart
from enaml.core.looper import Looper
from enaml.core.include import Include
from inkcut.workbench.core.utils import menu_icon

def plugin_factory():
    from inkcut.workbench.ui.plugin import MainViewPlugin
    return MainViewPlugin.instance()

def open_document(event):
    plugin = event.workbench.get_plugin('inkcut.workbench.ui')
    plugin.open_document(**event.parameters)
    
def start_job(event):
    plugin = event.workbench.get_plugin('inkcut.workbench.ui')
    plugin.start_job()
    
def undo(event):
    plugin = event.workbench.get_plugin('inkcut.workbench.ui')
    plugin.undo()
    
def redo(event):
    plugin = event.workbench.get_plugin('inkcut.workbench.ui')
    plugin.redo()
    
def device_setup(event):
    import enaml
    with enaml.imports():
        from inkcut.workbench.ui.device_view import DeviceDialog
    plugin = event.workbench.get_plugin('inkcut.workbench.ui')
    ui = event.workbench.get_plugin('enaml.workbench.ui')
    DeviceDialog(ui.window,plugin=event.workbench.get_plugin('inkcut.workbench.core'),device=plugin.job.device).exec_()

def media_setup(event):
    import enaml
    with enaml.imports():
        from inkcut.workbench.ui.media_view import MediaDialog
    plugin = event.workbench.get_plugin('inkcut.workbench.ui')
    ui = event.workbench.get_plugin('enaml.workbench.ui')
    MediaDialog(ui.window,media=plugin.job.media).exec_()    
# def recent_documents_menu(workspace):
#     plugin = workspace.get_plugin('inkcut.workbench.ui')
#     return [ ActionItem(
#              path = '/file/recent/%s'%i,
#              label = it,
#              command = 'inkcut.workbench.ui.open',
#              paramters = {'path':it}
#             )
#             for i,it in enumerate(plugin.recent_documents)]
# 
# enamldef RecentDocsManifest(PluginManifest):
#     """ The manifest which is registered when the view is loaded.
# 
#     This manifest contributes extra menu items to the menu bar.
# 
#     """
#     id = 'inkcut.workbench.ui.recent_docs'
#     
#     Extension:
#         id = 'actions'
#         point = 'enaml.workbench.ui.actions'
#         factory = recent_documents_menu
    
    

enamldef MainViewManifest(PluginManifest):
    """ The manifest which is registered when the view is loaded.

    This manifest contributes extra menu items to the menu bar.

    """
    id = 'inkcut.workbench.ui'
    factory = plugin_factory
    attr plugin
    Extension:
        id = 'commands'
        point = 'enaml.workbench.core.commands'
        Command:
            id = 'inkcut.workbench.ui.open'
            handler = open_document
        Command:
            id = 'inkcut.workbench.ui.start_job'
            handler = start_job
        Command:
            id = 'inkcut.workbench.ui.undo'
            handler = undo
        Command:
            id = 'inkcut.workbench.ui.redo'
            handler = redo
        Command:
            id = 'inkcut.workbench.ui.device_setup'
            handler = device_setup
        Command:
            id = 'inkcut.workbench.ui.media_setup'
            handler = media_setup
            
    Extension:
        id = 'autostart'
        point = 'enaml.workbench.ui.autostart'
        Autostart:
            plugin_id = 'inkcut.workbench.ui'
    
    Extension:
        id = 'actions'
        point = 'enaml.workbench.ui.actions'
        MenuItem:
            path = '/edit'
            label = 'Edit'
            after = 'file'
            before = 'help'
            ItemGroup:
                id = 'edit'
        MenuItem:
            path = '/file/recent'
            label = 'Recent'
            after = 'open'
            before = 'cut'
            visible << bool(plugin.recent_documents)
        MenuItem:
            path = '/device'
            label = 'Device'
            after = 'edit'
            before = 'help'
            ItemGroup:
                id = 'device'
                
        ActionItem:
            path = '/file/open'
            label = 'Open'
            shortcut = 'Ctrl+O'
            command = 'inkcut.workbench.ui.open'
            icon = menu_icon('folder_page')
        
        Looper:
            iterable << plugin.recent_documents
            ActionItem:
                path = '/file/recent/%i'%loop_index
                label = loop_item
                command = 'inkcut.workbench.ui.open'
                parameters = {'path':loop_item}
            
        ActionItem:
            path = '/file/cut'
            label = 'Cut'
            shortcut = 'Ctrl+P'
            after = 'open'
            before = 'close'
            command = 'inkcut.workbench.ui.start_job'
            icon = menu_icon('chart_curve_go')
            
        ActionItem:
            path = '/edit/undo'
            label = 'Undo'
            shortcut = 'Ctrl+Z'
            icon = menu_icon('arrow_undo')
            command = 'inkcut.workbench.ui.undo'
        ActionItem:
            path = '/edit/redo'
            label = 'Redo'
            shortcut = 'Ctrl+Y'
            icon = menu_icon('arrow_redo')
            command = 'inkcut.workbench.ui.redo'
            
        ActionItem:
            path = '/device/setup'
            label = 'Setup...'
            shortcut = 'Ctrl+Alt+P'
            command = 'inkcut.workbench.ui.device_setup'
            icon = menu_icon('printer')
